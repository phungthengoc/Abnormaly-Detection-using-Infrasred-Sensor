

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 18 14:10:59 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  0008                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  0088                     	;# 
   158  0089                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178  0000                     	;# 
   179  0001                     	;# 
   180  0002                     	;# 
   181  0003                     	;# 
   182  0004                     	;# 
   183  0005                     	;# 
   184  0006                     	;# 
   185  0007                     	;# 
   186  0008                     	;# 
   187  0009                     	;# 
   188  000A                     	;# 
   189  000B                     	;# 
   190  000C                     	;# 
   191  000D                     	;# 
   192  000E                     	;# 
   193  000E                     	;# 
   194  000F                     	;# 
   195  0010                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0013                     	;# 
   199  0014                     	;# 
   200  0015                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0017                     	;# 
   204  0018                     	;# 
   205  0019                     	;# 
   206  001A                     	;# 
   207  001B                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  001D                     	;# 
   211  001E                     	;# 
   212  001F                     	;# 
   213  0081                     	;# 
   214  0085                     	;# 
   215  0086                     	;# 
   216  0087                     	;# 
   217  0088                     	;# 
   218  0089                     	;# 
   219  008C                     	;# 
   220  008D                     	;# 
   221  008E                     	;# 
   222  0091                     	;# 
   223  0092                     	;# 
   224  0093                     	;# 
   225  0094                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  000E                     	;# 
   253  000E                     	;# 
   254  000F                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0017                     	;# 
   264  0018                     	;# 
   265  0019                     	;# 
   266  001A                     	;# 
   267  001B                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001D                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  0081                     	;# 
   274  0085                     	;# 
   275  0086                     	;# 
   276  0087                     	;# 
   277  0088                     	;# 
   278  0089                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  018C                     	;# 
   357  018D                     	;# 
   358  001A                     _RCREG	set	26
   359  0019                     _TXREG	set	25
   360  0065                     _RCIF	set	101
   361  00C6                     _RX9	set	198
   362  00C4                     _CREN	set	196
   363  005F                     _GIE	set	95
   364  005E                     _PEIE	set	94
   365  00C7                     _SPEN	set	199
   366  0043                     _RD3	set	67
   367  0042                     _RD2	set	66
   368  0047                     _RD7	set	71
   369  0046                     _RD6	set	70
   370  0045                     _RD5	set	69
   371  0044                     _RD4	set	68
   372  0041                     _RD1	set	65
   373  0033                     _RB3	set	51
   374  0099                     _SPBRG	set	153
   375  0088                     _TRISD	set	136
   376  04C1                     _TRMT	set	1217
   377  0465                     _RCIE	set	1125
   378  04C6                     _TX9	set	1222
   379  04C5                     _TXEN	set	1221
   380  04C4                     _SYNC	set	1220
   381  04C2                     _BRGH	set	1218
   382  043F                     _TRISC7	set	1087
   383  043E                     _TRISC6	set	1086
   384  0443                     _TRISD3	set	1091
   385  0442                     _TRISD2	set	1090
   386                           
   387                           	psect	strings
   388  0294                     __pstrings:	
   389  0294                     stringtab:	
   390  0294                     __stringtab:	
   391  0294                     stringcode:	
   392                           ;	String table - string pointers are 1 byte each
   393                           
   394  0294                     stringdir:	
   395  0294  3002               	movlw	high stringdir
   396  0295  008A               	movwf	10
   397  0296  0804               	movf	4,w
   398  0297  0A84               	incf	4,f
   399  0298  0782               	addwf	2,f
   400  0299                     __stringbase:	
   401  0299  3400               	retlw	0
   402  029A                     __end_of__stringtab:	
   403  029A                     STR_2:	
   404  029A  344E               	retlw	78	;'N'
   405  029B  3449               	retlw	73	;'I'
   406  029C  3443               	retlw	67	;'C'
   407  029D  3445               	retlw	69	;'E'
   408  029E  3420               	retlw	32	;' '
   409  029F  3454               	retlw	84	;'T'
   410  02A0  344F               	retlw	79	;'O'
   411  02A1  3420               	retlw	32	;' '
   412  02A2  344D               	retlw	77	;'M'
   413  02A3  3445               	retlw	69	;'E'
   414  02A4  3445               	retlw	69	;'E'
   415  02A5  3454               	retlw	84	;'T'
   416  02A6  3420               	retlw	32	;' '
   417  02A7  3459               	retlw	89	;'Y'
   418  02A8  344F               	retlw	79	;'O'
   419  02A9  3455               	retlw	85	;'U'
   420  02AA  3400               	retlw	0
   421  02AB                     STR_1:	
   422  02AB  3454               	retlw	84	;'T'
   423  02AC  3448               	retlw	72	;'H'
   424  02AD  3449               	retlw	73	;'I'
   425  02AE  3453               	retlw	83	;'S'
   426  02AF  3427               	retlw	39	;'''
   427  02B0  3453               	retlw	83	;'S'
   428  02B1  3420               	retlw	32	;' '
   429  02B2  344D               	retlw	77	;'M'
   430  02B3  3459               	retlw	89	;'Y'
   431  02B4  3420               	retlw	32	;' '
   432  02B5  3448               	retlw	72	;'H'
   433  02B6  344F               	retlw	79	;'O'
   434  02B7  344D               	retlw	77	;'M'
   435  02B8  3445               	retlw	69	;'E'
   436  02B9  3420               	retlw	32	;' '
   437  02BA  3400               	retlw	0
   438                           
   439                           ; #config settings
   440  0000                     
   441                           	psect	cinit
   442  0011                     start_initialization:	
   443  0011                     __initialization:	
   444                           
   445                           ; Clear objects allocated to COMMON
   446  0011  01FB               	clrf	__pbssCOMMON& (0+127)
   447  0012  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   448  0013  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   449                           
   450                           ; Clear objects allocated to BANK0
   451  0014  1283               	bcf	3,5	;RP0=0, select bank0
   452  0015  1303               	bcf	3,6	;RP1=0, select bank0
   453  0016  01AE               	clrf	__pbssBANK0& (0+127)
   454  0017  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   455  0018  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   456  0019  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   457  001A  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   458  001B  01B3               	clrf	(__pbssBANK0+5)& (0+127)
   459  001C  01B4               	clrf	(__pbssBANK0+6)& (0+127)
   460  001D  01B5               	clrf	(__pbssBANK0+7)& (0+127)
   461  001E  01B6               	clrf	(__pbssBANK0+8)& (0+127)
   462  001F  01B7               	clrf	(__pbssBANK0+9)& (0+127)
   463  0020                     end_of_initialization:	
   464                           ;End of C runtime variable initialization code
   465                           
   466  0020                     __end_of__initialization:	
   467  0020  0183               	clrf	3
   468  0021  120A  118A  28C1   	ljmp	_main	;jump to C main() function
   469                           
   470                           	psect	bssCOMMON
   471  007B                     __pbssCOMMON:	
   472  007B                     _UART_size:	
   473  007B                     	ds	1
   474  007C                     _UART_rear:	
   475  007C                     	ds	1
   476  007D                     _UART_front:	
   477  007D                     	ds	1
   478                           
   479                           	psect	bssBANK0
   480  002E                     __pbssBANK0:	
   481  002E                     _UART_Buffer:	
   482  002E                     	ds	10
   483                           
   484                           	psect	cstackCOMMON
   485  0070                     __pcstackCOMMON:	
   486  0070                     ?_LCD_Init:	
   487  0070                     ?_LCD_Clear:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_LCD_Write_String:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_main:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_LCD_DATA:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_LCD_CMD:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_LCD_Write_Char:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_UART_isr:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_ISR:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?___awmod:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ___awmod@divisor:	
   515                           ; 2 bytes @ 0x0
   516                           
   517                           
   518                           ; 2 bytes @ 0x0
   519  0070                     	ds	2
   520  0072                     ___awmod@dividend:	
   521                           
   522                           ; 2 bytes @ 0x2
   523  0072                     	ds	2
   524  0074                     ??___awmod:	
   525                           
   526                           ; 1 bytes @ 0x4
   527  0074                     	ds	1
   528  0075                     ___awmod@counter:	
   529                           
   530                           ; 1 bytes @ 0x5
   531  0075                     	ds	1
   532  0076                     ___awmod@sign:	
   533                           
   534                           ; 1 bytes @ 0x6
   535  0076                     	ds	1
   536  0077                     ??_UART_isr:	
   537                           
   538                           ; 1 bytes @ 0x7
   539  0077                     	ds	1
   540  0078                     ??_ISR:	
   541                           
   542                           ; 1 bytes @ 0x8
   543  0078                     	ds	3
   544                           
   545                           	psect	cstackBANK0
   546  0020                     __pcstackBANK0:	
   547  0020                     ??_LCD_DATA:	
   548  0020                     LCD_DATA@Data:	
   549                           ; 1 bytes @ 0x0
   550                           
   551                           
   552                           ; 1 bytes @ 0x0
   553  0020                     	ds	1
   554  0021                     ??_LCD_CMD:	
   555  0021                     ??_LCD_Write_Char:	
   556                           ; 1 bytes @ 0x1
   557                           
   558                           
   559                           ; 1 bytes @ 0x1
   560  0021                     	ds	2
   561  0023                     LCD_CMD@CMD:	
   562  0023                     LCD_Write_Char@Low4:	
   563                           ; 1 bytes @ 0x3
   564                           
   565                           
   566                           ; 1 bytes @ 0x3
   567  0023                     	ds	1
   568  0024                     ??_LCD_Init:	
   569  0024                     ??_LCD_Clear:	
   570                           ; 1 bytes @ 0x4
   571                           
   572  0024                     ?_LCD_Set_Cursor:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0024                     LCD_Set_Cursor@c:	
   576                           ; 1 bytes @ 0x4
   577                           
   578  0024                     LCD_Write_Char@High4:	
   579                           ; 1 bytes @ 0x4
   580                           
   581                           
   582                           ; 1 bytes @ 0x4
   583  0024                     	ds	1
   584  0025                     ??_LCD_Set_Cursor:	
   585  0025                     LCD_Write_Char@Data:	
   586                           ; 1 bytes @ 0x5
   587                           
   588                           
   589                           ; 1 bytes @ 0x5
   590  0025                     	ds	1
   591  0026                     ??_LCD_Write_String:	
   592  0026                     LCD_Write_String@i:	
   593                           ; 1 bytes @ 0x6
   594                           
   595                           
   596                           ; 2 bytes @ 0x6
   597  0026                     	ds	1
   598  0027                     LCD_Set_Cursor@r:	
   599                           
   600                           ; 1 bytes @ 0x7
   601  0027                     	ds	1
   602  0028                     LCD_Set_Cursor@Low4:	
   603  0028                     LCD_Write_String@str:	
   604                           ; 1 bytes @ 0x8
   605                           
   606                           
   607                           ; 1 bytes @ 0x8
   608  0028                     	ds	1
   609  0029                     LCD_Set_Cursor@High4:	
   610                           
   611                           ; 1 bytes @ 0x9
   612  0029                     	ds	1
   613  002A                     LCD_Set_Cursor@Temp:	
   614                           
   615                           ; 1 bytes @ 0xA
   616  002A                     	ds	1
   617  002B                     ??_main:	
   618                           
   619                           ; 1 bytes @ 0xB
   620  002B                     	ds	3
   621                           
   622                           	psect	maintext
   623  00C1                     __pmaintext:	
   624 ;;
   625 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   626 ;;
   627 ;; *************** function _main *****************
   628 ;; Defined at:
   629 ;;		line 13 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : B00/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0
   645 ;;      Temps:          0       3       0       0       0
   646 ;;      Totals:         0       3       0       0       0
   647 ;;Total ram usage:        3 bytes
   648 ;; Hardware stack levels required when called:    6
   649 ;; This function calls:
   650 ;;		_LCD_Clear
   651 ;;		_LCD_Init
   652 ;;		_LCD_Set_Cursor
   653 ;;		_LCD_Write_String
   654 ;; This function is called by:
   655 ;;		Startup code after reset
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           
   660                           ;psect for function _main
   661  00C1                     _main:	
   662  00C1                     l1238:	
   663                           ;incstack = 0
   664                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   665                           
   666                           
   667                           ;main.c: 14:     LCD_Init();
   668  00C1  120A  118A  2024  120A  118A  	fcall	_LCD_Init
   669  00C6                     l1240:	
   670                           
   671                           ;main.c: 15:     _delay((unsigned long)((500)*(10000000/4000.0)));
   672  00C6  3007               	movlw	7
   673  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   674  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   675  00C9  00AD               	movwf	??_main+2
   676  00CA  3058               	movlw	88
   677  00CB  00AC               	movwf	??_main+1
   678  00CC  3059               	movlw	89
   679  00CD  00AB               	movwf	??_main
   680  00CE                     u577:	
   681  00CE  0BAB               	decfsz	??_main,f
   682  00CF  28CE               	goto	u577
   683  00D0  0BAC               	decfsz	??_main+1,f
   684  00D1  28CE               	goto	u577
   685  00D2  0BAD               	decfsz	??_main+2,f
   686  00D3  28CE               	goto	u577
   687  00D4                     l1242:	
   688                           
   689                           ;main.c: 16:     LCD_Clear();
   690  00D4  120A  118A  2305  120A  118A  	fcall	_LCD_Clear
   691  00D9                     l1244:	
   692                           
   693                           ;main.c: 24:     {;main.c: 25:         if(RB3 == 1)
   694  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   695  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   696  00DB  1D86               	btfss	6,3	;volatile
   697  00DC  28DE               	goto	u511
   698  00DD  28DF               	goto	u510
   699  00DE                     u511:	
   700  00DE  291D               	goto	l20
   701  00DF                     u510:	
   702  00DF                     l1246:	
   703                           
   704                           ;main.c: 26:         {;main.c: 27:             RD1 = 1;
   705  00DF  1488               	bsf	8,1	;volatile
   706  00E0                     l1248:	
   707                           
   708                           ;main.c: 28:             LCD_Set_Cursor(1,1);
   709  00E0  01A4               	clrf	LCD_Set_Cursor@c
   710  00E1  0AA4               	incf	LCD_Set_Cursor@c,f
   711  00E2  3001               	movlw	1
   712  00E3  120A  118A  217F  120A  118A  	fcall	_LCD_Set_Cursor
   713  00E8                     l1250:	
   714                           
   715                           ;main.c: 29:             LCD_Write_String("THIS'S MY HOME ");
   716  00E8  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   717  00E9  120A  118A  226B  120A  118A  	fcall	_LCD_Write_String
   718  00EE                     l1252:	
   719                           
   720                           ;main.c: 30:             _delay((unsigned long)((3000)*(10000000/4000.0)));
   721  00EE  3027               	movlw	39
   722  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   723  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   724  00F1  00AD               	movwf	??_main+2
   725  00F2  300D               	movlw	13
   726  00F3  00AC               	movwf	??_main+1
   727  00F4  3025               	movlw	37
   728  00F5  00AB               	movwf	??_main
   729  00F6                     u587:	
   730  00F6  0BAB               	decfsz	??_main,f
   731  00F7  28F6               	goto	u587
   732  00F8  0BAC               	decfsz	??_main+1,f
   733  00F9  28F6               	goto	u587
   734  00FA  0BAD               	decfsz	??_main+2,f
   735  00FB  28F6               	goto	u587
   736  00FC  28FD               	nop2
   737  00FD                     l1254:	
   738                           
   739                           ;main.c: 31:             LCD_Set_Cursor(2,1);
   740  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   741  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   742  00FF  01A4               	clrf	LCD_Set_Cursor@c
   743  0100  0AA4               	incf	LCD_Set_Cursor@c,f
   744  0101  3002               	movlw	2
   745  0102  120A  118A  217F  120A  118A  	fcall	_LCD_Set_Cursor
   746  0107                     l1256:	
   747                           
   748                           ;main.c: 32:             LCD_Write_String("NICE TO MEET YOU");
   749  0107  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   750  0108  120A  118A  226B  120A  118A  	fcall	_LCD_Write_String
   751                           
   752                           ;main.c: 33:             _delay((unsigned long)((3000)*(10000000/4000.0)));
   753  010D  3027               	movlw	39
   754  010E  1283               	bcf	3,5	;RP0=0, select bank0
   755  010F  1303               	bcf	3,6	;RP1=0, select bank0
   756  0110  00AD               	movwf	??_main+2
   757  0111  300D               	movlw	13
   758  0112  00AC               	movwf	??_main+1
   759  0113  3025               	movlw	37
   760  0114  00AB               	movwf	??_main
   761  0115                     u597:	
   762  0115  0BAB               	decfsz	??_main,f
   763  0116  2915               	goto	u597
   764  0117  0BAC               	decfsz	??_main+1,f
   765  0118  2915               	goto	u597
   766  0119  0BAD               	decfsz	??_main+2,f
   767  011A  2915               	goto	u597
   768  011B  291C               	nop2
   769                           
   770                           ;main.c: 34:         }
   771  011C  28D9               	goto	l1244
   772  011D                     l20:	
   773                           ;main.c: 35:         else
   774                           
   775                           
   776                           ;main.c: 36:         {;main.c: 37:             RD1 = 0;
   777  011D  1088               	bcf	8,1	;volatile
   778  011E  28D4               	goto	l1242
   779  011F  120A  118A  280E   	ljmp	start
   780  0122                     __end_of_main:	
   781                           
   782                           	psect	text1
   783  026B                     __ptext1:	
   784 ;; *************** function _LCD_Write_String *****************
   785 ;; Defined at:
   786 ;;		line 119 in file "LCD.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  str             1    wreg     PTR unsigned char 
   789 ;;		 -> STR_2(17), STR_1(16), 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  str             1    8[BANK0 ] PTR unsigned char 
   792 ;;		 -> STR_2(17), STR_1(16), 
   793 ;;  i               2    6[BANK0 ] int 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         0       3       0       0       0
   805 ;;      Temps:          0       0       0       0       0
   806 ;;      Totals:         0       3       0       0       0
   807 ;;Total ram usage:        3 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    5
   810 ;; This function calls:
   811 ;;		_LCD_Write_Char
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           
   818                           ;psect for function _LCD_Write_String
   819  026B                     _LCD_Write_String:	
   820                           
   821                           ;incstack = 0
   822                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   823                           ;LCD_Write_String@str stored from wreg
   824  026B  1283               	bcf	3,5	;RP0=0, select bank0
   825  026C  1303               	bcf	3,6	;RP1=0, select bank0
   826  026D  00A8               	movwf	LCD_Write_String@str
   827  026E                     l1204:	
   828                           
   829                           ;LCD.c: 119: void LCD_Write_String(char *str);LCD.c: 120: {;LCD.c: 121:     int i;;LCD.c
      +                          : 122:     for(i=0;str[i]!='\0';i++)
   830  026E  01A6               	clrf	LCD_Write_String@i
   831  026F  01A7               	clrf	LCD_Write_String@i+1
   832  0270  2A86               	goto	l1210
   833  0271                     l1206:	
   834                           
   835                           ;LCD.c: 123:        LCD_Write_Char(str[i]);
   836  0271  0826               	movf	LCD_Write_String@i,w
   837  0272  0728               	addwf	LCD_Write_String@str,w
   838  0273  0084               	movwf	4
   839  0274  120A  118A  2294  120A  118A  	fcall	stringdir
   840  0279  120A  118A  2122  120A  118A  	fcall	_LCD_Write_Char
   841  027E                     l1208:	
   842  027E  3001               	movlw	1
   843  027F  1283               	bcf	3,5	;RP0=0, select bank0
   844  0280  1303               	bcf	3,6	;RP1=0, select bank0
   845  0281  07A6               	addwf	LCD_Write_String@i,f
   846  0282  1803               	skipnc
   847  0283  0AA7               	incf	LCD_Write_String@i+1,f
   848  0284  3000               	movlw	0
   849  0285  07A7               	addwf	LCD_Write_String@i+1,f
   850  0286                     l1210:	
   851  0286  0826               	movf	LCD_Write_String@i,w
   852  0287  0728               	addwf	LCD_Write_String@str,w
   853  0288  0084               	movwf	4
   854  0289  120A  118A  2294  120A  118A  	fcall	stringdir
   855  028E  3A00               	xorlw	0
   856  028F  1D03               	skipz
   857  0290  2A92               	goto	u481
   858  0291  2A93               	goto	u480
   859  0292                     u481:	
   860  0292  2A71               	goto	l1206
   861  0293                     u480:	
   862  0293                     l78:	
   863  0293  0008               	return
   864  0294                     __end_of_LCD_Write_String:	
   865                           
   866                           	psect	text2
   867  0122                     __ptext2:	
   868 ;; *************** function _LCD_Write_Char *****************
   869 ;; Defined at:
   870 ;;		line 102 in file "LCD.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  Data            1    wreg     unsigned char 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  Data            1    5[BANK0 ] unsigned char 
   875 ;;  High4           1    4[BANK0 ] unsigned char 
   876 ;;  Low4            1    3[BANK0 ] unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         0       3       0       0       0
   888 ;;      Temps:          0       2       0       0       0
   889 ;;      Totals:         0       5       0       0       0
   890 ;;Total ram usage:        5 bytes
   891 ;; Hardware stack levels used:    1
   892 ;; Hardware stack levels required when called:    4
   893 ;; This function calls:
   894 ;;		_LCD_DATA
   895 ;; This function is called by:
   896 ;;		_LCD_Write_String
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _LCD_Write_Char
   902  0122                     _LCD_Write_Char:	
   903                           
   904                           ;incstack = 0
   905                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   906                           ;LCD_Write_Char@Data stored from wreg
   907  0122  1283               	bcf	3,5	;RP0=0, select bank0
   908  0123  1303               	bcf	3,6	;RP1=0, select bank0
   909  0124  00A5               	movwf	LCD_Write_Char@Data
   910  0125                     l1068:	
   911                           
   912                           ;LCD.c: 102: void LCD_Write_Char(char Data);LCD.c: 103: {;LCD.c: 104:    char Low4,High4
      +                          ;;LCD.c: 105:    Low4 = Data & 0x0F;
   913  0125  0825               	movf	LCD_Write_Char@Data,w
   914  0126  390F               	andlw	15
   915  0127  00A1               	movwf	??_LCD_Write_Char
   916  0128  0821               	movf	??_LCD_Write_Char,w
   917  0129  00A3               	movwf	LCD_Write_Char@Low4
   918                           
   919                           ;LCD.c: 106:    High4 = Data & 0xF0;
   920  012A  0825               	movf	LCD_Write_Char@Data,w
   921  012B  39F0               	andlw	240
   922  012C  00A1               	movwf	??_LCD_Write_Char
   923  012D  0821               	movf	??_LCD_Write_Char,w
   924  012E  00A4               	movwf	LCD_Write_Char@High4
   925  012F                     l1070:	
   926                           
   927                           ;LCD.c: 107:    RD2 = 1;
   928  012F  1508               	bsf	8,2	;volatile
   929  0130                     l1072:	
   930                           
   931                           ;LCD.c: 108:    LCD_DATA(High4>>4);
   932  0130  0824               	movf	LCD_Write_Char@High4,w
   933  0131  00A1               	movwf	??_LCD_Write_Char
   934  0132  3004               	movlw	4
   935  0133                     u345:	
   936  0133  1003               	clrc
   937  0134  0CA1               	rrf	??_LCD_Write_Char,f
   938  0135  3EFF               	addlw	-1
   939  0136  1D03               	skipz
   940  0137  2933               	goto	u345
   941  0138  0821               	movf	??_LCD_Write_Char,w
   942  0139  120A  118A  22BB  120A  118A  	fcall	_LCD_DATA
   943  013E                     l1074:	
   944                           
   945                           ;LCD.c: 109:    RD3 = 1;
   946  013E  1283               	bcf	3,5	;RP0=0, select bank0
   947  013F  1303               	bcf	3,6	;RP1=0, select bank0
   948  0140  1588               	bsf	8,3	;volatile
   949  0141                     l1076:	
   950                           
   951                           ;LCD.c: 110:    _delay((unsigned long)((10000)*(10000000/4000000.0)));
   952  0141  3021               	movlw	33
   953  0142  1283               	bcf	3,5	;RP0=0, select bank0
   954  0143  1303               	bcf	3,6	;RP1=0, select bank0
   955  0144  00A2               	movwf	??_LCD_Write_Char+1
   956  0145  3075               	movlw	117
   957  0146  00A1               	movwf	??_LCD_Write_Char
   958  0147                     u607:	
   959  0147  0BA1               	decfsz	??_LCD_Write_Char,f
   960  0148  2947               	goto	u607
   961  0149  0BA2               	decfsz	??_LCD_Write_Char+1,f
   962  014A  2947               	goto	u607
   963  014B  294C               	nop2
   964  014C                     l1078:	
   965                           
   966                           ;LCD.c: 111:    RD3 = 0;
   967  014C  1283               	bcf	3,5	;RP0=0, select bank0
   968  014D  1303               	bcf	3,6	;RP1=0, select bank0
   969  014E  1188               	bcf	8,3	;volatile
   970  014F                     l1080:	
   971                           
   972                           ;LCD.c: 112:    _delay((unsigned long)((10000)*(10000000/4000000.0)));
   973  014F  3021               	movlw	33
   974  0150  1283               	bcf	3,5	;RP0=0, select bank0
   975  0151  1303               	bcf	3,6	;RP1=0, select bank0
   976  0152  00A2               	movwf	??_LCD_Write_Char+1
   977  0153  3075               	movlw	117
   978  0154  00A1               	movwf	??_LCD_Write_Char
   979  0155                     u617:	
   980  0155  0BA1               	decfsz	??_LCD_Write_Char,f
   981  0156  2955               	goto	u617
   982  0157  0BA2               	decfsz	??_LCD_Write_Char+1,f
   983  0158  2955               	goto	u617
   984  0159  295A               	nop2
   985  015A                     l1082:	
   986                           
   987                           ;LCD.c: 113:    LCD_DATA(Low4);
   988  015A  1283               	bcf	3,5	;RP0=0, select bank0
   989  015B  1303               	bcf	3,6	;RP1=0, select bank0
   990  015C  0823               	movf	LCD_Write_Char@Low4,w
   991  015D  120A  118A  22BB  120A  118A  	fcall	_LCD_DATA
   992  0162                     l1084:	
   993                           
   994                           ;LCD.c: 114:    RD3 = 1;
   995  0162  1283               	bcf	3,5	;RP0=0, select bank0
   996  0163  1303               	bcf	3,6	;RP1=0, select bank0
   997  0164  1588               	bsf	8,3	;volatile
   998  0165                     l1086:	
   999                           
  1000                           ;LCD.c: 115:    _delay((unsigned long)((10000)*(10000000/4000000.0)));
  1001  0165  3021               	movlw	33
  1002  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1003  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1004  0168  00A2               	movwf	??_LCD_Write_Char+1
  1005  0169  3075               	movlw	117
  1006  016A  00A1               	movwf	??_LCD_Write_Char
  1007  016B                     u627:	
  1008  016B  0BA1               	decfsz	??_LCD_Write_Char,f
  1009  016C  296B               	goto	u627
  1010  016D  0BA2               	decfsz	??_LCD_Write_Char+1,f
  1011  016E  296B               	goto	u627
  1012  016F  2970               	nop2
  1013  0170                     l1088:	
  1014                           
  1015                           ;LCD.c: 116:    RD3 = 0;
  1016  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0172  1188               	bcf	8,3	;volatile
  1019  0173                     l1090:	
  1020                           
  1021                           ;LCD.c: 117:    _delay((unsigned long)((10000)*(10000000/4000000.0)));
  1022  0173  3021               	movlw	33
  1023  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0176  00A2               	movwf	??_LCD_Write_Char+1
  1026  0177  3075               	movlw	117
  1027  0178  00A1               	movwf	??_LCD_Write_Char
  1028  0179                     u637:	
  1029  0179  0BA1               	decfsz	??_LCD_Write_Char,f
  1030  017A  2979               	goto	u637
  1031  017B  0BA2               	decfsz	??_LCD_Write_Char+1,f
  1032  017C  2979               	goto	u637
  1033  017D  297E               	nop2
  1034  017E                     l72:	
  1035  017E  0008               	return
  1036  017F                     __end_of_LCD_Write_Char:	
  1037                           
  1038                           	psect	text3
  1039  017F                     __ptext3:	
  1040 ;; *************** function _LCD_Set_Cursor *****************
  1041 ;; Defined at:
  1042 ;;		line 40 in file "LCD.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  r               1    wreg     unsigned char 
  1045 ;;  c               1    4[BANK0 ] unsigned char 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  r               1    7[BANK0 ] unsigned char 
  1048 ;;  Temp            1   10[BANK0 ] unsigned char 
  1049 ;;  High4           1    9[BANK0 ] unsigned char 
  1050 ;;  Low4            1    8[BANK0 ] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       1       0       0       0
  1061 ;;      Locals:         0       4       0       0       0
  1062 ;;      Temps:          0       2       0       0       0
  1063 ;;      Totals:         0       7       0       0       0
  1064 ;;Total ram usage:        7 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    5
  1067 ;; This function calls:
  1068 ;;		_LCD_CMD
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _LCD_Set_Cursor
  1076  017F                     _LCD_Set_Cursor:	
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1080                           ;LCD_Set_Cursor@r stored from wreg
  1081  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1082  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1083  0181  00A7               	movwf	LCD_Set_Cursor@r
  1084  0182                     l1184:	
  1085                           
  1086                           ;LCD.c: 40: void LCD_Set_Cursor(unsigned char r, unsigned char c);LCD.c: 41: {;LCD.c: 42
      +                          :     unsigned char Temp,Low4,High4;;LCD.c: 43:     if(r == 1)
  1087  0182  0327               	decf	LCD_Set_Cursor@r,w
  1088  0183  1D03               	btfss	3,2
  1089  0184  2986               	goto	u441
  1090  0185  2987               	goto	u440
  1091  0186                     u441:	
  1092  0186  29AB               	goto	l1194
  1093  0187                     u440:	
  1094  0187                     l1186:	
  1095                           
  1096                           ;LCD.c: 44:     {;LCD.c: 45:       Temp = 0x80 + c - 1;
  1097  0187  0824               	movf	LCD_Set_Cursor@c,w
  1098  0188  3E7F               	addlw	127
  1099  0189  00A5               	movwf	??_LCD_Set_Cursor
  1100  018A  0825               	movf	??_LCD_Set_Cursor,w
  1101  018B  00AA               	movwf	LCD_Set_Cursor@Temp
  1102                           
  1103                           ;LCD.c: 46:       High4 = Temp >> 4;
  1104  018C  082A               	movf	LCD_Set_Cursor@Temp,w
  1105  018D  00A5               	movwf	??_LCD_Set_Cursor
  1106  018E  3004               	movlw	4
  1107  018F                     u455:	
  1108  018F  1003               	clrc
  1109  0190  0CA5               	rrf	??_LCD_Set_Cursor,f
  1110  0191  3EFF               	addlw	-1
  1111  0192  1D03               	skipz
  1112  0193  298F               	goto	u455
  1113  0194  0825               	movf	??_LCD_Set_Cursor,w
  1114  0195  00A6               	movwf	??_LCD_Set_Cursor+1
  1115  0196  0826               	movf	??_LCD_Set_Cursor+1,w
  1116  0197  00A9               	movwf	LCD_Set_Cursor@High4
  1117  0198                     l1188:	
  1118                           
  1119                           ;LCD.c: 47:       Low4 = Temp & 0x0F;
  1120  0198  082A               	movf	LCD_Set_Cursor@Temp,w
  1121  0199  390F               	andlw	15
  1122  019A  00A5               	movwf	??_LCD_Set_Cursor
  1123  019B  0825               	movf	??_LCD_Set_Cursor,w
  1124  019C  00A8               	movwf	LCD_Set_Cursor@Low4
  1125  019D                     l1190:	
  1126                           
  1127                           ;LCD.c: 48:       LCD_CMD(High4);
  1128  019D  0829               	movf	LCD_Set_Cursor@High4,w
  1129  019E  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1130  01A3                     l1192:	
  1131                           
  1132                           ;LCD.c: 49:       LCD_CMD(Low4);
  1133  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1134  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1135  01A5  0828               	movf	LCD_Set_Cursor@Low4,w
  1136  01A6  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1137  01AB                     l1194:	
  1138                           
  1139                           ;LCD.c: 51:     if(r == 2)
  1140  01AB  3002               	movlw	2
  1141  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1142  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1143  01AE  0627               	xorwf	LCD_Set_Cursor@r,w
  1144  01AF  1D03               	btfss	3,2
  1145  01B0  29B2               	goto	u461
  1146  01B1  29B3               	goto	u460
  1147  01B2                     u461:	
  1148  01B2  29D7               	goto	l66
  1149  01B3                     u460:	
  1150  01B3                     l1196:	
  1151                           
  1152                           ;LCD.c: 52:     {;LCD.c: 53:       Temp = 0xC0 + c - 1;
  1153  01B3  0824               	movf	LCD_Set_Cursor@c,w
  1154  01B4  3EBF               	addlw	191
  1155  01B5  00A5               	movwf	??_LCD_Set_Cursor
  1156  01B6  0825               	movf	??_LCD_Set_Cursor,w
  1157  01B7  00AA               	movwf	LCD_Set_Cursor@Temp
  1158                           
  1159                           ;LCD.c: 54:       High4 = Temp >> 4;
  1160  01B8  082A               	movf	LCD_Set_Cursor@Temp,w
  1161  01B9  00A5               	movwf	??_LCD_Set_Cursor
  1162  01BA  3004               	movlw	4
  1163  01BB                     u475:	
  1164  01BB  1003               	clrc
  1165  01BC  0CA5               	rrf	??_LCD_Set_Cursor,f
  1166  01BD  3EFF               	addlw	-1
  1167  01BE  1D03               	skipz
  1168  01BF  29BB               	goto	u475
  1169  01C0  0825               	movf	??_LCD_Set_Cursor,w
  1170  01C1  00A6               	movwf	??_LCD_Set_Cursor+1
  1171  01C2  0826               	movf	??_LCD_Set_Cursor+1,w
  1172  01C3  00A9               	movwf	LCD_Set_Cursor@High4
  1173  01C4                     l1198:	
  1174                           
  1175                           ;LCD.c: 55:       Low4 = Temp & 0x0F;
  1176  01C4  082A               	movf	LCD_Set_Cursor@Temp,w
  1177  01C5  390F               	andlw	15
  1178  01C6  00A5               	movwf	??_LCD_Set_Cursor
  1179  01C7  0825               	movf	??_LCD_Set_Cursor,w
  1180  01C8  00A8               	movwf	LCD_Set_Cursor@Low4
  1181  01C9                     l1200:	
  1182                           
  1183                           ;LCD.c: 56:       LCD_CMD(High4);
  1184  01C9  0829               	movf	LCD_Set_Cursor@High4,w
  1185  01CA  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1186  01CF                     l1202:	
  1187                           
  1188                           ;LCD.c: 57:       LCD_CMD(Low4);
  1189  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1190  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1191  01D1  0828               	movf	LCD_Set_Cursor@Low4,w
  1192  01D2  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1193  01D7                     l66:	
  1194  01D7  0008               	return
  1195  01D8                     __end_of_LCD_Set_Cursor:	
  1196                           
  1197                           	psect	text4
  1198  0024                     __ptext4:	
  1199 ;; *************** function _LCD_Init *****************
  1200 ;; Defined at:
  1201 ;;		line 60 in file "LCD.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0, pclath, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1215 ;;      Params:         0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0
  1217 ;;      Temps:          0       2       0       0       0
  1218 ;;      Totals:         0       2       0       0       0
  1219 ;;Total ram usage:        2 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    5
  1222 ;; This function calls:
  1223 ;;		_LCD_CMD
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _LCD_Init
  1231  0024                     _LCD_Init:	
  1232  0024                     l1130:	
  1233                           ;incstack = 0
  1234                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1235                           
  1236                           
  1237                           ;LCD.c: 63:   TRISD = 0x00;
  1238  0024  1683               	bsf	3,5	;RP0=1, select bank1
  1239  0025  1303               	bcf	3,6	;RP1=0, select bank1
  1240  0026  0188               	clrf	8	;volatile
  1241  0027                     l1132:	
  1242                           
  1243                           ;LCD.c: 64:   TRISD2 = 0;
  1244  0027  1108               	bcf	8,2	;volatile
  1245  0028                     l1134:	
  1246                           
  1247                           ;LCD.c: 65:   TRISD3 = 0;
  1248  0028  1188               	bcf	8,3	;volatile
  1249  0029                     l1136:	
  1250                           
  1251                           ;LCD.c: 69:   LCD_CMD(0x03);
  1252  0029  3003               	movlw	3
  1253  002A  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1254  002F                     l1138:	
  1255                           
  1256                           ;LCD.c: 70:   _delay((unsigned long)((5)*(10000000/4000.0)));
  1257  002F  3011               	movlw	17
  1258  0030  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0031  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0032  00A5               	movwf	??_LCD_Init+1
  1261  0033  3039               	movlw	57
  1262  0034  00A4               	movwf	??_LCD_Init
  1263  0035                     u647:	
  1264  0035  0BA4               	decfsz	??_LCD_Init,f
  1265  0036  2835               	goto	u647
  1266  0037  0BA5               	decfsz	??_LCD_Init+1,f
  1267  0038  2835               	goto	u647
  1268  0039  283A               	nop2
  1269  003A                     l1140:	
  1270                           
  1271                           ;LCD.c: 71:   LCD_CMD(0x03);
  1272  003A  3003               	movlw	3
  1273  003B  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1274  0040                     l1142:	
  1275                           
  1276                           ;LCD.c: 72:   _delay((unsigned long)((100)*(10000000/4000000.0)));
  1277  0040  3052               	movlw	82
  1278  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0043  00A4               	movwf	??_LCD_Init
  1281  0044                     u657:	
  1282  0044  0BA4               	decfsz	??_LCD_Init,f
  1283  0045  2844               	goto	u657
  1284  0046  0000               	nop
  1285  0047                     l1144:	
  1286                           
  1287                           ;LCD.c: 73:   LCD_CMD(0x03);
  1288  0047  3003               	movlw	3
  1289  0048  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1290  004D                     l1146:	
  1291                           
  1292                           ;LCD.c: 74:   _delay((unsigned long)((100)*(10000000/4000000.0)));
  1293  004D  3052               	movlw	82
  1294  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1295  004F  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0050  00A4               	movwf	??_LCD_Init
  1297  0051                     u667:	
  1298  0051  0BA4               	decfsz	??_LCD_Init,f
  1299  0052  2851               	goto	u667
  1300  0053  0000               	nop
  1301  0054                     l1148:	
  1302                           
  1303                           ;LCD.c: 75:   LCD_CMD(0x02);
  1304  0054  3002               	movlw	2
  1305  0055  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1306  005A                     l1150:	
  1307                           
  1308                           ;LCD.c: 76:   _delay((unsigned long)((100)*(10000000/4000000.0)));
  1309  005A  3052               	movlw	82
  1310  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1311  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1312  005D  00A4               	movwf	??_LCD_Init
  1313  005E                     u677:	
  1314  005E  0BA4               	decfsz	??_LCD_Init,f
  1315  005F  285E               	goto	u677
  1316  0060  0000               	nop
  1317  0061                     l1152:	
  1318                           
  1319                           ;LCD.c: 79:   LCD_CMD(0x02);
  1320  0061  3002               	movlw	2
  1321  0062  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1322  0067                     l1154:	
  1323                           
  1324                           ;LCD.c: 80:   LCD_CMD(0x08);
  1325  0067  3008               	movlw	8
  1326  0068  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1327  006D                     l1156:	
  1328                           
  1329                           ;LCD.c: 81:    _delay((unsigned long)((53)*(10000000/4000000.0)));
  1330  006D  302B               	movlw	43
  1331  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1332  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0070  00A4               	movwf	??_LCD_Init
  1334  0071                     u687:	
  1335  0071  0BA4               	decfsz	??_LCD_Init,f
  1336  0072  2871               	goto	u687
  1337  0073                     l1158:	
  1338                           
  1339                           ;LCD.c: 84:   LCD_CMD(0x00);
  1340  0073  3000               	movlw	0
  1341  0074  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1342  0079                     l1160:	
  1343                           
  1344                           ;LCD.c: 85:   LCD_CMD(0x08);
  1345  0079  3008               	movlw	8
  1346  007A  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1347  007F                     l1162:	
  1348                           
  1349                           ;LCD.c: 86:   _delay((unsigned long)((53)*(10000000/4000000.0)));
  1350  007F  302B               	movlw	43
  1351  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1352  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0082  00A4               	movwf	??_LCD_Init
  1354  0083                     u697:	
  1355  0083  0BA4               	decfsz	??_LCD_Init,f
  1356  0084  2883               	goto	u697
  1357  0085                     l1164:	
  1358                           
  1359                           ;LCD.c: 89:   LCD_CMD(0x00);
  1360  0085  3000               	movlw	0
  1361  0086  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1362  008B                     l1166:	
  1363                           
  1364                           ;LCD.c: 90:   LCD_CMD(0x01);
  1365  008B  3001               	movlw	1
  1366  008C  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1367  0091                     l1168:	
  1368                           
  1369                           ;LCD.c: 91:   _delay((unsigned long)((3)*(10000000/4000.0)));
  1370  0091  300A               	movlw	10
  1371  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1372  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1373  0094  00A5               	movwf	??_LCD_Init+1
  1374  0095  30BB               	movlw	187
  1375  0096  00A4               	movwf	??_LCD_Init
  1376  0097                     u707:	
  1377  0097  0BA4               	decfsz	??_LCD_Init,f
  1378  0098  2897               	goto	u707
  1379  0099  0BA5               	decfsz	??_LCD_Init+1,f
  1380  009A  2897               	goto	u707
  1381  009B  289C               	nop2
  1382  009C                     l1170:	
  1383                           
  1384                           ;LCD.c: 94:   LCD_CMD(0x00);
  1385  009C  3000               	movlw	0
  1386  009D  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1387  00A2                     l1172:	
  1388                           
  1389                           ;LCD.c: 95:   LCD_CMD(0x06);
  1390  00A2  3006               	movlw	6
  1391  00A3  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1392  00A8                     l1174:	
  1393                           
  1394                           ;LCD.c: 96:   _delay((unsigned long)((53)*(10000000/4000000.0)));
  1395  00A8  302B               	movlw	43
  1396  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1397  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1398  00AB  00A4               	movwf	??_LCD_Init
  1399  00AC                     u717:	
  1400  00AC  0BA4               	decfsz	??_LCD_Init,f
  1401  00AD  28AC               	goto	u717
  1402  00AE                     l1176:	
  1403                           
  1404                           ;LCD.c: 98:   LCD_CMD(0x00);
  1405  00AE  3000               	movlw	0
  1406  00AF  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1407  00B4                     l1178:	
  1408                           
  1409                           ;LCD.c: 99:   LCD_CMD(0x0C);
  1410  00B4  300C               	movlw	12
  1411  00B5  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1412  00BA                     l1180:	
  1413                           
  1414                           ;LCD.c: 100:   _delay((unsigned long)((53)*(10000000/4000000.0)));
  1415  00BA  302B               	movlw	43
  1416  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1417  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1418  00BD  00A4               	movwf	??_LCD_Init
  1419  00BE                     u727:	
  1420  00BE  0BA4               	decfsz	??_LCD_Init,f
  1421  00BF  28BE               	goto	u727
  1422  00C0                     l69:	
  1423  00C0  0008               	return
  1424  00C1                     __end_of_LCD_Init:	
  1425                           
  1426                           	psect	text5
  1427  0305                     __ptext5:	
  1428 ;; *************** function _LCD_Clear *****************
  1429 ;; Defined at:
  1430 ;;		line 35 in file "LCD.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0, pclath, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1444 ;;      Params:         0       0       0       0       0
  1445 ;;      Locals:         0       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0
  1447 ;;      Totals:         0       0       0       0       0
  1448 ;;Total ram usage:        0 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    5
  1451 ;; This function calls:
  1452 ;;		_LCD_CMD
  1453 ;; This function is called by:
  1454 ;;		_main
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function _LCD_Clear
  1460  0305                     _LCD_Clear:	
  1461  0305                     l1182:	
  1462                           ;incstack = 0
  1463                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  1464                           
  1465                           
  1466                           ;LCD.c: 37:     LCD_CMD(0x00);
  1467  0305  3000               	movlw	0
  1468  0306  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1469                           
  1470                           ;LCD.c: 38:     LCD_CMD(0x01);
  1471  030B  3001               	movlw	1
  1472  030C  120A  118A  22DB  120A  118A  	fcall	_LCD_CMD
  1473  0311                     l61:	
  1474  0311  0008               	return
  1475  0312                     __end_of_LCD_Clear:	
  1476                           
  1477                           	psect	text6
  1478  02DB                     __ptext6:	
  1479 ;; *************** function _LCD_CMD *****************
  1480 ;; Defined at:
  1481 ;;		line 24 in file "LCD.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  CMD             1    wreg     unsigned char 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  CMD             1    3[BANK0 ] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, pclath, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         0       0       0       0       0
  1496 ;;      Locals:         0       1       0       0       0
  1497 ;;      Temps:          0       2       0       0       0
  1498 ;;      Totals:         0       3       0       0       0
  1499 ;;Total ram usage:        3 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    4
  1502 ;; This function calls:
  1503 ;;		_LCD_DATA
  1504 ;; This function is called by:
  1505 ;;		_LCD_Clear
  1506 ;;		_LCD_Set_Cursor
  1507 ;;		_LCD_Init
  1508 ;;		_LCD_SL
  1509 ;;		_LCD_SR
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _LCD_CMD
  1515  02DB                     _LCD_CMD:	
  1516                           
  1517                           ;incstack = 0
  1518                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  1519                           ;LCD_CMD@CMD stored from wreg
  1520  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1521  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1522  02DD  00A3               	movwf	LCD_CMD@CMD
  1523  02DE                     l1058:	
  1524                           
  1525                           ;LCD.c: 24: void LCD_CMD(unsigned char CMD);LCD.c: 25: {;LCD.c: 27:     RD2 = 0;
  1526  02DE  1108               	bcf	8,2	;volatile
  1527  02DF                     l1060:	
  1528                           
  1529                           ;LCD.c: 29:     LCD_DATA(CMD);
  1530  02DF  0823               	movf	LCD_CMD@CMD,w
  1531  02E0  120A  118A  22BB  120A  118A  	fcall	_LCD_DATA
  1532  02E5                     l1062:	
  1533                           
  1534                           ;LCD.c: 31:     RD3 = 1;
  1535  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1536  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1537  02E7  1588               	bsf	8,3	;volatile
  1538  02E8                     l1064:	
  1539                           
  1540                           ;LCD.c: 32:     _delay((unsigned long)((10000)*(10000000/4000000.0)));
  1541  02E8  3021               	movlw	33
  1542  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1543  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  1544  02EB  00A2               	movwf	??_LCD_CMD+1
  1545  02EC  3075               	movlw	117
  1546  02ED  00A1               	movwf	??_LCD_CMD
  1547  02EE                     u737:	
  1548  02EE  0BA1               	decfsz	??_LCD_CMD,f
  1549  02EF  2AEE               	goto	u737
  1550  02F0  0BA2               	decfsz	??_LCD_CMD+1,f
  1551  02F1  2AEE               	goto	u737
  1552  02F2  2AF3               	nop2
  1553  02F3                     l1066:	
  1554                           
  1555                           ;LCD.c: 33:     RD3 = 0;
  1556  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1557  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1558  02F5  1188               	bcf	8,3	;volatile
  1559  02F6                     l58:	
  1560  02F6  0008               	return
  1561  02F7                     __end_of_LCD_CMD:	
  1562                           
  1563                           	psect	text7
  1564  02BB                     __ptext7:	
  1565 ;; *************** function _LCD_DATA *****************
  1566 ;; Defined at:
  1567 ;;		line 5 in file "LCD.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  Data            1    wreg     unsigned char 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  Data            1    0[BANK0 ] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1581 ;;      Params:         0       0       0       0       0
  1582 ;;      Locals:         0       1       0       0       0
  1583 ;;      Temps:          0       0       0       0       0
  1584 ;;      Totals:         0       1       0       0       0
  1585 ;;Total ram usage:        1 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    3
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_LCD_CMD
  1592 ;;		_LCD_Write_Char
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function _LCD_DATA
  1598  02BB                     _LCD_DATA:	
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in _LCD_DATA: [wreg]
  1602                           ;LCD_DATA@Data stored from wreg
  1603  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1604  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1605  02BD  00A0               	movwf	LCD_DATA@Data
  1606  02BE                     l1048:	
  1607                           
  1608                           ;LCD.c: 5: void LCD_DATA(unsigned char Data);LCD.c: 6: {;LCD.c: 7:     if(Data & 1)
  1609  02BE  1C20               	btfss	LCD_DATA@Data,0
  1610  02BF  2AC1               	goto	u301
  1611  02C0  2AC2               	goto	u300
  1612  02C1                     u301:	
  1613  02C1  2AC4               	goto	l47
  1614  02C2                     u300:	
  1615  02C2                     l1050:	
  1616                           
  1617                           ;LCD.c: 8:         RD4 = 1;
  1618  02C2  1608               	bsf	8,4	;volatile
  1619  02C3  2AC5               	goto	l48
  1620  02C4                     l47:	
  1621                           ;LCD.c: 9:     else
  1622                           
  1623                           
  1624                           ;LCD.c: 10:         RD4 = 0;
  1625  02C4  1208               	bcf	8,4	;volatile
  1626  02C5                     l48:	
  1627                           
  1628                           ;LCD.c: 11:     if(Data & 2)
  1629  02C5  1CA0               	btfss	LCD_DATA@Data,1
  1630  02C6  2AC8               	goto	u311
  1631  02C7  2AC9               	goto	u310
  1632  02C8                     u311:	
  1633  02C8  2ACB               	goto	l49
  1634  02C9                     u310:	
  1635  02C9                     l1052:	
  1636                           
  1637                           ;LCD.c: 12:         RD5 = 1;
  1638  02C9  1688               	bsf	8,5	;volatile
  1639  02CA  2ACC               	goto	l50
  1640  02CB                     l49:	
  1641                           ;LCD.c: 13:     else
  1642                           
  1643                           
  1644                           ;LCD.c: 14:         RD5 = 0;
  1645  02CB  1288               	bcf	8,5	;volatile
  1646  02CC                     l50:	
  1647                           
  1648                           ;LCD.c: 15:     if(Data & 4)
  1649  02CC  1D20               	btfss	LCD_DATA@Data,2
  1650  02CD  2ACF               	goto	u321
  1651  02CE  2AD0               	goto	u320
  1652  02CF                     u321:	
  1653  02CF  2AD2               	goto	l51
  1654  02D0                     u320:	
  1655  02D0                     l1054:	
  1656                           
  1657                           ;LCD.c: 16:         RD6 = 1;
  1658  02D0  1708               	bsf	8,6	;volatile
  1659  02D1  2AD3               	goto	l52
  1660  02D2                     l51:	
  1661                           ;LCD.c: 17:     else
  1662                           
  1663                           
  1664                           ;LCD.c: 18:         RD6 = 0;
  1665  02D2  1308               	bcf	8,6	;volatile
  1666  02D3                     l52:	
  1667                           
  1668                           ;LCD.c: 19:     if(Data & 8)
  1669  02D3  1DA0               	btfss	LCD_DATA@Data,3
  1670  02D4  2AD6               	goto	u331
  1671  02D5  2AD7               	goto	u330
  1672  02D6                     u331:	
  1673  02D6  2AD9               	goto	l53
  1674  02D7                     u330:	
  1675  02D7                     l1056:	
  1676                           
  1677                           ;LCD.c: 20:         RD7 = 1;
  1678  02D7  1788               	bsf	8,7	;volatile
  1679  02D8  2ADA               	goto	l55
  1680  02D9                     l53:	
  1681                           ;LCD.c: 21:     else
  1682                           
  1683                           
  1684                           ;LCD.c: 22:         RD7 = 0;
  1685  02D9  1388               	bcf	8,7	;volatile
  1686  02DA                     l55:	
  1687  02DA  0008               	return
  1688  02DB                     __end_of_LCD_DATA:	
  1689                           
  1690                           	psect	text8
  1691  02F7                     __ptext8:	
  1692 ;; *************** function _ISR *****************
  1693 ;; Defined at:
  1694 ;;		line 3 in file "interrupt.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;		None
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1708 ;;      Params:         0       0       0       0       0
  1709 ;;      Locals:         0       0       0       0       0
  1710 ;;      Temps:          3       0       0       0       0
  1711 ;;      Totals:         3       0       0       0       0
  1712 ;;Total ram usage:        3 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    2
  1715 ;; This function calls:
  1716 ;;		_UART_isr
  1717 ;; This function is called by:
  1718 ;;		Interrupt level 1
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           
  1723                           ;psect for function _ISR
  1724  02F7                     _ISR:	
  1725  02F7                     i1l1288:	
  1726                           
  1727                           ;interrupt.c: 6:         UART_isr();
  1728  02F7  120A  118A  2231  120A  118A  	fcall	_UART_isr
  1729  02FC                     i1l176:	
  1730  02FC  087A               	movf	??_ISR+2,w
  1731  02FD  008A               	movwf	10
  1732  02FE  0879               	movf	??_ISR+1,w
  1733  02FF  0084               	movwf	4
  1734  0300  0E78               	swapf	??_ISR^(0+4294967168),w
  1735  0301  0083               	movwf	3
  1736  0302  0EFE               	swapf	btemp,f
  1737  0303  0E7E               	swapf	btemp,w
  1738  0304  0009               	retfie
  1739  0305                     __end_of_ISR:	
  1740                           
  1741                           	psect	intentry
  1742  0004                     __pintentry:	
  1743                           ;incstack = 0
  1744                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1745                           
  1746  0004                     interrupt_function:	
  1747  007E                     saved_w	set	btemp
  1748  0004  00FE               	movwf	btemp
  1749  0005  0E03               	swapf	3,w
  1750  0006  00F8               	movwf	??_ISR
  1751  0007  0804               	movf	4,w
  1752  0008  00F9               	movwf	??_ISR+1
  1753  0009  080A               	movf	10,w
  1754  000A  00FA               	movwf	??_ISR+2
  1755  000B  120A  118A  2AF7   	ljmp	_ISR
  1756                           
  1757                           	psect	text9
  1758  0231                     __ptext9:	
  1759 ;; *************** function _UART_isr *****************
  1760 ;; Defined at:
  1761 ;;		line 50 in file "uart.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;		None
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1775 ;;      Params:         0       0       0       0       0
  1776 ;;      Locals:         0       0       0       0       0
  1777 ;;      Temps:          1       0       0       0       0
  1778 ;;      Totals:         1       0       0       0       0
  1779 ;;Total ram usage:        1 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:    1
  1782 ;; This function calls:
  1783 ;;		___awmod
  1784 ;; This function is called by:
  1785 ;;		_ISR
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           
  1790                           ;psect for function _UART_isr
  1791  0231                     _UART_isr:	
  1792  0231                     i1l1212:	
  1793                           ;incstack = 0
  1794                           ; Regs used in _UART_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1795                           
  1796                           
  1797                           ;uart.c: 52:         if (RCIF == 1)
  1798  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0233  1E8C               	btfss	12,5	;volatile
  1801  0234  2A36               	goto	u49_21
  1802  0235  2A37               	goto	u49_20
  1803  0236                     u49_21:	
  1804  0236  2A6A               	goto	i1l145
  1805  0237                     u49_20:	
  1806  0237                     i1l1214:	
  1807                           
  1808                           ;uart.c: 53:         {;uart.c: 54:             UART_Buffer[UART_rear] = RCREG;
  1809  0237  081A               	movf	26,w	;volatile
  1810  0238  00F7               	movwf	??_UART_isr
  1811  0239  087C               	movf	_UART_rear,w
  1812  023A  3E2E               	addlw	(low (_UART_Buffer| 0))& (0+255)
  1813  023B  0084               	movwf	4
  1814  023C  0877               	movf	??_UART_isr,w
  1815  023D  1383               	bcf	3,7	;select IRP bank0
  1816  023E  0080               	movwf	0
  1817  023F                     i1l1216:	
  1818                           
  1819                           ;uart.c: 55:             UART_rear = (UART_rear + 1) % 10;
  1820  023F  300A               	movlw	10
  1821  0240  00F0               	movwf	___awmod@divisor
  1822  0241  3000               	movlw	0
  1823  0242  00F1               	movwf	___awmod@divisor+1
  1824  0243  087C               	movf	_UART_rear,w
  1825  0244  3E01               	addlw	1
  1826  0245  00F2               	movwf	___awmod@dividend
  1827  0246  3000               	movlw	0
  1828  0247  1803               	skipnc
  1829  0248  3001               	movlw	1
  1830  0249  00F3               	movwf	___awmod@dividend+1
  1831  024A  120A  118A  21D8  120A  118A  	fcall	___awmod
  1832  024F  0870               	movf	?___awmod,w
  1833  0250  00F7               	movwf	??_UART_isr
  1834  0251  0877               	movf	??_UART_isr,w
  1835  0252  00FC               	movwf	_UART_rear
  1836  0253                     i1l1218:	
  1837                           
  1838                           ;uart.c: 56:             UART_size = (UART_size + 1) % 10;
  1839  0253  300A               	movlw	10
  1840  0254  00F0               	movwf	___awmod@divisor
  1841  0255  3000               	movlw	0
  1842  0256  00F1               	movwf	___awmod@divisor+1
  1843  0257  087B               	movf	_UART_size,w
  1844  0258  3E01               	addlw	1
  1845  0259  00F2               	movwf	___awmod@dividend
  1846  025A  3000               	movlw	0
  1847  025B  1803               	skipnc
  1848  025C  3001               	movlw	1
  1849  025D  00F3               	movwf	___awmod@dividend+1
  1850  025E  120A  118A  21D8  120A  118A  	fcall	___awmod
  1851  0263  0870               	movf	?___awmod,w
  1852  0264  00F7               	movwf	??_UART_isr
  1853  0265  0877               	movf	??_UART_isr,w
  1854  0266  00FB               	movwf	_UART_size
  1855  0267                     i1l1220:	
  1856                           
  1857                           ;uart.c: 57:             RCIF = 0;
  1858  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0269  128C               	bcf	12,5	;volatile
  1861  026A                     i1l145:	
  1862  026A  0008               	return
  1863  026B                     __end_of_UART_isr:	
  1864                           
  1865                           	psect	text10
  1866  01D8                     __ptext10:	
  1867 ;; *************** function ___awmod *****************
  1868 ;; Defined at:
  1869 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  divisor         2    0[COMMON] int 
  1872 ;;  dividend        2    2[COMMON] int 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  sign            1    6[COMMON] unsigned char 
  1875 ;;  counter         1    5[COMMON] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2    0[COMMON] int 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         4       0       0       0       0
  1886 ;;      Locals:         2       0       0       0       0
  1887 ;;      Temps:          1       0       0       0       0
  1888 ;;      Totals:         7       0       0       0       0
  1889 ;;Total ram usage:        7 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_UART_isr
  1895 ;;		_UART_read
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function ___awmod
  1901  01D8                     ___awmod:	
  1902  01D8                     i1l1092:	
  1903                           ;incstack = 0
  1904                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1905                           
  1906  01D8  01F6               	clrf	___awmod@sign
  1907  01D9                     i1l1094:	
  1908  01D9  1FF3               	btfss	___awmod@dividend+1,7
  1909  01DA  29DC               	goto	u35_21
  1910  01DB  29DD               	goto	u35_20
  1911  01DC                     u35_21:	
  1912  01DC  29E4               	goto	i1l1100
  1913  01DD                     u35_20:	
  1914  01DD                     i1l1096:	
  1915  01DD  09F2               	comf	___awmod@dividend,f
  1916  01DE  09F3               	comf	___awmod@dividend+1,f
  1917  01DF  0AF2               	incf	___awmod@dividend,f
  1918  01E0  1903               	skipnz
  1919  01E1  0AF3               	incf	___awmod@dividend+1,f
  1920  01E2                     i1l1098:	
  1921  01E2  01F6               	clrf	___awmod@sign
  1922  01E3  0AF6               	incf	___awmod@sign,f
  1923  01E4                     i1l1100:	
  1924  01E4  1FF1               	btfss	___awmod@divisor+1,7
  1925  01E5  29E7               	goto	u36_21
  1926  01E6  29E8               	goto	u36_20
  1927  01E7                     u36_21:	
  1928  01E7  29ED               	goto	i1l1104
  1929  01E8                     u36_20:	
  1930  01E8                     i1l1102:	
  1931  01E8  09F0               	comf	___awmod@divisor,f
  1932  01E9  09F1               	comf	___awmod@divisor+1,f
  1933  01EA  0AF0               	incf	___awmod@divisor,f
  1934  01EB  1903               	skipnz
  1935  01EC  0AF1               	incf	___awmod@divisor+1,f
  1936  01ED                     i1l1104:	
  1937  01ED  0870               	movf	___awmod@divisor,w
  1938  01EE  0471               	iorwf	___awmod@divisor+1,w
  1939  01EF  1903               	btfsc	3,2
  1940  01F0  29F2               	goto	u37_21
  1941  01F1  29F3               	goto	u37_20
  1942  01F2                     u37_21:	
  1943  01F2  2A22               	goto	i1l1122
  1944  01F3                     u37_20:	
  1945  01F3                     i1l1106:	
  1946  01F3  01F5               	clrf	___awmod@counter
  1947  01F4  0AF5               	incf	___awmod@counter,f
  1948  01F5  2A01               	goto	i1l1112
  1949  01F6                     i1l1108:	
  1950  01F6  3001               	movlw	1
  1951  01F7                     u38_25:	
  1952  01F7  1003               	clrc
  1953  01F8  0DF0               	rlf	___awmod@divisor,f
  1954  01F9  0DF1               	rlf	___awmod@divisor+1,f
  1955  01FA  3EFF               	addlw	-1
  1956  01FB  1D03               	skipz
  1957  01FC  29F7               	goto	u38_25
  1958  01FD                     i1l1110:	
  1959  01FD  3001               	movlw	1
  1960  01FE  00F4               	movwf	??___awmod
  1961  01FF  0874               	movf	??___awmod,w
  1962  0200  07F5               	addwf	___awmod@counter,f
  1963  0201                     i1l1112:	
  1964  0201  1FF1               	btfss	___awmod@divisor+1,7
  1965  0202  2A04               	goto	u39_21
  1966  0203  2A05               	goto	u39_20
  1967  0204                     u39_21:	
  1968  0204  29F6               	goto	i1l1108
  1969  0205                     u39_20:	
  1970  0205                     i1l1114:	
  1971  0205  0871               	movf	___awmod@divisor+1,w
  1972  0206  0273               	subwf	___awmod@dividend+1,w
  1973  0207  1D03               	skipz
  1974  0208  2A0B               	goto	u40_25
  1975  0209  0870               	movf	___awmod@divisor,w
  1976  020A  0272               	subwf	___awmod@dividend,w
  1977  020B                     u40_25:	
  1978  020B  1C03               	skipc
  1979  020C  2A0E               	goto	u40_21
  1980  020D  2A0F               	goto	u40_20
  1981  020E                     u40_21:	
  1982  020E  2A15               	goto	i1l1118
  1983  020F                     u40_20:	
  1984  020F                     i1l1116:	
  1985  020F  0870               	movf	___awmod@divisor,w
  1986  0210  02F2               	subwf	___awmod@dividend,f
  1987  0211  0871               	movf	___awmod@divisor+1,w
  1988  0212  1C03               	skipc
  1989  0213  03F3               	decf	___awmod@dividend+1,f
  1990  0214  02F3               	subwf	___awmod@dividend+1,f
  1991  0215                     i1l1118:	
  1992  0215  3001               	movlw	1
  1993  0216                     u41_25:	
  1994  0216  1003               	clrc
  1995  0217  0CF1               	rrf	___awmod@divisor+1,f
  1996  0218  0CF0               	rrf	___awmod@divisor,f
  1997  0219  3EFF               	addlw	-1
  1998  021A  1D03               	skipz
  1999  021B  2A16               	goto	u41_25
  2000  021C                     i1l1120:	
  2001  021C  3001               	movlw	1
  2002  021D  02F5               	subwf	___awmod@counter,f
  2003  021E  1D03               	btfss	3,2
  2004  021F  2A21               	goto	u42_21
  2005  0220  2A22               	goto	u42_20
  2006  0221                     u42_21:	
  2007  0221  2A05               	goto	i1l1114
  2008  0222                     u42_20:	
  2009  0222                     i1l1122:	
  2010  0222  0876               	movf	___awmod@sign,w
  2011  0223  1903               	btfsc	3,2
  2012  0224  2A26               	goto	u43_21
  2013  0225  2A27               	goto	u43_20
  2014  0226                     u43_21:	
  2015  0226  2A2C               	goto	i1l1126
  2016  0227                     u43_20:	
  2017  0227                     i1l1124:	
  2018  0227  09F2               	comf	___awmod@dividend,f
  2019  0228  09F3               	comf	___awmod@dividend+1,f
  2020  0229  0AF2               	incf	___awmod@dividend,f
  2021  022A  1903               	skipnz
  2022  022B  0AF3               	incf	___awmod@dividend+1,f
  2023  022C                     i1l1126:	
  2024  022C  0873               	movf	___awmod@dividend+1,w
  2025  022D  00F1               	movwf	?___awmod+1
  2026  022E  0872               	movf	___awmod@dividend,w
  2027  022F  00F0               	movwf	?___awmod
  2028  0230                     i1l428:	
  2029  0230  0008               	return
  2030  0231                     __end_of___awmod:	
  2031  007E                     btemp	set	126	;btemp
  2032  007E                     wtemp0	set	126


Data Sizes:
    Strings     33
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     14      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_isr
    _UART_isr->___awmod

Critical Paths under _main in BANK0

    _main->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_DATA

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1086
                                             11 BANK0      3     3      0
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     334
                                              6 BANK0      3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       5     5      0     178
                                              1 BANK0      5     5      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     532
                                              4 BANK0      7     6      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     110
                                              4 BANK0      2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     110
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_DATA                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0     752
                                              8 COMMON     3     3      0
                           _UART_isr
 ---------------------------------------------------------------------------------
 (5) _UART_isr                                             1     1      0     752
                                              7 COMMON     1     1      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_CMD
       _LCD_DATA
   _LCD_Init
     _LCD_CMD
       _LCD_DATA
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_DATA
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_DATA

 _ISR (ROOT)
   _UART_isr
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 18 14:10:59 2019

                        pc 0002                __CFG_CP$OFF 0000                         l20 011D  
                       l50 02CC                         l51 02D2                         l52 02D3  
                       l53 02D9                         l61 0311                         l55 02DA  
                       l47 02C4                         l48 02C5                         l72 017E  
                       l49 02CB                         l58 02F6                         l66 01D7  
                       l69 00C0                         l78 0293                         fsr 0004  
                      _GIE 005F                        _RB3 0033                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      u300 02C2                        u301 02C1                        u310 02C9  
                      u311 02C8                        u320 02D0                        u321 02CF  
                      u330 02D7                        u331 02D6                        u510 00DF  
                      u511 00DE                        u440 0187                        u441 0186  
                      u345 0133               __CFG_CPD$OFF 0000                        u460 01B3  
                      _ISR 02F7                        u461 01B2                        u455 018F  
                      u607 0147                        u480 0293                        u617 0155  
                      u481 0292                        u707 0097                        u475 01BB  
                      u627 016B                        u717 00AC                        u637 0179  
                      u727 00BE                        u647 0035                        u737 02EE  
                      u657 0044                        u577 00CE                        u667 0051  
                      u587 00F6                        u677 005E                        u597 0115  
                      u687 0071                        u697 0083                        _RX9 00C6  
                      _TX9 04C6                        fsr0 0004                        indf 0000  
             ___awmod@sign 0076               __CFG_FOSC$HS 0000            __end_of_LCD_CMD 02F7  
             __CFG_LVP$OFF 0000                       ?_ISR 0070             _LCD_Set_Cursor 017F  
                     l1200 01C9                       l1050 02C2                       l1130 0024  
                     l1202 01CF                       l1210 0286                       l1052 02C9  
                     l1060 02DF                       l1140 003A                       l1132 0027  
                     l1204 026E                       l1054 02D0                       l1062 02E5  
                     l1150 005A                       l1142 0040                       l1134 0028  
                     l1070 012F                       l1206 0271                       l1056 02D7  
                     l1048 02BE                       l1064 02E8                       l1160 0079  
                     l1152 0061                       l1144 0047                       l1136 0029  
                     l1080 014F                       l1072 0130                       l1208 027E  
                     l1240 00C6                       l1066 02F3                       l1058 02DE  
                     l1170 009C                       l1162 007F                       l1154 0067  
                     l1146 004D                       l1138 002F                       l1090 0173  
                     l1082 015A                       l1074 013E                       l1250 00E8  
                     l1242 00D4                       l1180 00BA                       l1172 00A2  
                     l1164 0085                       l1156 006D                       l1148 0054  
                     l1084 0162                       l1076 0141                       l1068 0125  
                     l1252 00EE                       l1244 00D9                       l1182 0305  
                     l1174 00A8                       l1166 008B                       l1158 0073  
                     l1190 019D                       l1086 0165                       l1078 014C  
                     l1254 00FD                       l1246 00DF                       l1238 00C1  
                     l1176 00AE                       l1168 0091                       l1192 01A3  
                     l1184 0182                       l1088 0170                       l1256 0107  
                     l1248 00E0                       l1178 00B4                       l1186 0187  
                     l1194 01AB                       l1196 01B3                       l1188 0198  
                     l1198 01C4        LCD_Write_String@str 0028                       STR_1 02AB  
                     STR_2 029A                       _BRGH 04C2                       _CREN 00C4  
                     _PEIE 005E                       _RCIE 0465                       _RCIF 0065  
                     _SPEN 00C7                       _TRMT 04C1                       _TXEN 04C5  
                     _SYNC 04C4               __CFG_WRT$OFF 0000          ?_LCD_Write_String 0070  
                     _main 00C1         __size_of_LCD_Clear 000D                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 000E         ??_LCD_Write_String 0026  
                    ??_ISR 0078           __end_of_LCD_DATA 02DB           __end_of_LCD_Init 00C1  
                    ?_main 0070              __CFG_WDTE$OFF 0000            __end_of___awmod 0231  
                    i1l145 026A                      i1l176 02FC                      i1l428 0230  
                    _RCREG 001A                      u40_20 020F                      u40_21 020E  
                    u40_25 020B                      u41_25 0216                      u42_20 0222  
                    u42_21 0221                      _SPBRG 0099                      u43_20 0227  
                    u35_20 01DD                      u43_21 0226                      u35_21 01DC  
                    u36_20 01E8                      u36_21 01E7                      u37_20 01F3  
                    u37_21 01F2                      u38_25 01F7                      u39_20 0205  
                    u39_21 0204                      u49_20 0237                      u49_21 0236  
                    _TRISD 0088                      _TXREG 0019     __end_of_LCD_Set_Cursor 01D8  
         __end_of_UART_isr 026B                      pclath 000A                      status 0003  
                    wtemp0 007E             _LCD_Write_Char 0122            __initialization 0011  
             __end_of_main 0122                     ??_main 002B          __end_of_LCD_Clear 0312  
                ??_LCD_CMD 0021            ?_LCD_Set_Cursor 0024                     i1l1100 01E4  
                   i1l1110 01FD                     i1l1102 01E8                     i1l1120 021C  
                   i1l1112 0201                     i1l1104 01ED                     i1l1114 0205  
                   i1l1106 01F3                     i1l1122 0222                     i1l1124 0227  
                   i1l1116 020F                     i1l1108 01F6                     i1l1220 0267  
                   i1l1212 0231                     i1l1126 022C                     i1l1118 0215  
                   i1l1214 0237                     i1l1216 023F                     i1l1218 0253  
                   i1l1092 01D8                     i1l1094 01D9                     i1l1096 01DD  
                   i1l1098 01E2                     i1l1288 02F7                     _TRISD2 0442  
                   _TRISD3 0443                     _TRISC6 043E                     _TRISC7 043F  
   __end_of_LCD_Write_Char 017F             __CFG_PWRTE$OFF 0000                  ??___awmod 0074  
          ___awmod@divisor 0070            ___awmod@counter 0075                     saved_w 007E  
          LCD_Set_Cursor@c 0024            LCD_Set_Cursor@r 0027                  ?_LCD_DATA 0070  
  __end_of__initialization 0020                  ?_LCD_Init 0070            ?_LCD_Write_Char 0070  
           __pcstackCOMMON 0070                  ?_UART_isr 0070                 __pbssBANK0 002E  
               ??_LCD_DATA 0020                 ??_LCD_Init 0024                 __pmaintext 00C1  
               __pintentry 0004                 ??_UART_isr 0077  __size_of_LCD_Write_String 0029  
                  _LCD_CMD 02DB                 __stringtab 0294                    ___awmod 01D8  
         ??_LCD_Set_Cursor 0025                    __ptext1 026B                    __ptext2 0122  
                  __ptext3 017F                    __ptext4 0024                    __ptext5 0305  
                  __ptext6 02DB                    __ptext7 02BB                    __ptext8 02F7  
                  __ptext9 0231               __size_of_ISR 000E           ___awmod@dividend 0072  
                _LCD_Clear 0305       end_of_initialization 0020                  _UART_rear 007C  
                _UART_size 007B                 LCD_CMD@CMD 0023                 ?_LCD_Clear 0070  
        LCD_Write_String@i 0026           ??_LCD_Write_Char 0021          __size_of_LCD_DATA 0020  
        __size_of_LCD_Init 009D           _LCD_Write_String 026B          __size_of_UART_isr 003A  
      start_initialization 0011                __end_of_ISR 0305                   ?_LCD_CMD 0070  
              __pbssCOMMON 007B                  ___latbits 0002              __pcstackBANK0 0020  
              ??_LCD_Clear 0024                   ?___awmod 0070                  __pstrings 0294  
                 _LCD_DATA 02BB          interrupt_function 0004                   _LCD_Init 0024  
                 _UART_isr 0231                __stringbase 0299           __size_of_LCD_CMD 001C  
 __end_of_LCD_Write_String 0294        LCD_Write_Char@High4 0024           __size_of___awmod 0059  
       __end_of__stringtab 029A                   __ptext10 01D8    __size_of_LCD_Set_Cursor 0059  
            __size_of_main 0061        LCD_Set_Cursor@High4 0029         LCD_Write_Char@Data 0025  
       LCD_Write_Char@Low4 0023                   intlevel1 0000                _UART_Buffer 002E  
                stringcode 0294    __size_of_LCD_Write_Char 005D         LCD_Set_Cursor@Low4 0028  
       LCD_Set_Cursor@Temp 002A               LCD_DATA@Data 0020                   stringdir 0294  
                 stringtab 0294                 _UART_front 007D  
